{"version":3,"sources":["reducers/buscarUsuarioReducer.js","store.js","actions/types.js","componentes/layout/Spinner.js","componentes/libros/Libros.js","componentes/libros/MostrarLibro.js","componentes/libros/NuevoLibro.js","componentes/libros/EditarLibro.js","componentes/suscriptores/FichaSuscriptor.js","componentes/libros/PrestamoLibro.js","actions/buscarUsuarioActions.js","componentes/suscriptores/Suscriptores.js","componentes/suscriptores/MostrarSuscriptor.js","componentes/suscriptores/EditarSuscriptor.js","componentes/suscriptores/NuevoSuscriptor.js","componentes/auth/Login.js","componentes/layout/Navbar.js","helpers/auth.js","App.js","serviceWorker.js","index.js"],"names":["initialState","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","store","compose","reactReduxFirebase","userProfile","useFirestoreForProfile","reduxFirestore","createStore","createStoreWithFirebase","combineReducers","firebaseReducer","firestore","firestoreReducer","usuario","state","action","type","nombre","apellido","codigo","carrera","window","__REDUX_DEVTOOLS_EXTENSION__","Spinner","className","firestoreConnect","collection","connect","props","libros","ordered","to","map","libro","key","id","titulo","ISBN","editorial","existencia","prestados","length","onClick","delete","doc","MostrarLibro","devolverLibro","libroActualizado","filter","elemento","update","btnPrestamo","this","prestado","fecha_solicitud","Component","storeAs","match","params","NuevoLibro","agregarLibro","e","preventDefault","nuevoLibro","history","add","then","push","leerDato","setState","target","name","value","onSubmit","placeholder","required","onChange","min","EditarLibro","tituloInput","React","createRef","editorialInput","ISBNInput","existenciaInput","actualizarLibro","current","defaultValue","ref","FichaSuscriptor","alumno","PrestamoLibro","noResultados","busqueda","buscarAlumno","buscarUsuario","where","get","resultado","empty","datos","docs","data","solicitarPrestamo","Date","toLocaleDateString","fichaAlumno","btnSolicitar","mensajeResultado","suscriptores","suscriptor","EditarSuscriptor","nombreInput","apellidoInput","codigoInput","carreraInput","editarSuscriptor","suscriptorActualizado","NuevoSuscriptor","agregarSuscriptor","nuevoSuscriptor","Login","email","password","iniciarSesion","login","console","log","catch","error","leerDatos","firebaseConnect","Navbar","usuarioAutenticado","cerrarSesion","logout","auth","data-toggle","data-target","aria-controls","aria-expanded","aria-label","href","uid","locationHelper","locationHelperBuilder","UserIsAuthenticated","createBrowserHistory","connectedRouterRedirect","wrapperDisplayName","AuthenticatingComponent","allowRedirectBack","redirectPath","ownProps","getRedirectQueryParam","authenticatingSelector","isInitializing","profile","isLoaded","authenticatedSelector","isEmpty","UserIsNotAuthenticated","App","exact","path","component","Libros","Suscriptores","MostrarSuscriptor","Boolean","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5b4ab5c6.chunk.js","sourcesContent":["import { BUSCAR_USUARIO } from '../actions/types';\n\nconst initialState = {};\n\nexport default function(state = initialState, action) {\n\n    //Switch va a estar evaluando los tipos de acciones\n    //Si coinide con Buscar_USUARIO entonces retorna\n    // el state y el objeto de usuario completo\n\n    //El reducer hace disponible el usuario\n    switch(action.type) {\n        case BUSCAR_USUARIO:\n            return {\n                ...state,\n                nombre: action.usuario.nombre,\n                apellido: action.usuario.apellido,\n                codigo: action.usuario.codigo,\n                carrera : action.usuario.carrera\n            }\n        default: \n            return state;\n    } \n}","import { createStore, combineReducers, compose  } from 'redux';\nimport { reactReduxFirebase, firebaseReducer } from 'react-redux-firebase';\nimport { reduxFirestore, firestoreReducer } from 'redux-firestore';\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\n\n/** Custom Reducers**/\nimport buscarUsuarioReducer from './reducers/buscarUsuarioReducer';\n\n \n// Configurar firestore.\nconst firebaseConfig = {\n    apiKey: \"AIzaSyBrovRjwsFcyNIuvPz6Zgxs5gb4YmZka0E\",\n    authDomain: \"bibliostore-9afb5.firebaseapp.com\",\n    databaseURL: \"https://bibliostore-9afb5.firebaseio.com\",\n    projectId: \"bibliostore-9afb5\",\n    storageBucket: \"bibliostore-9afb5.appspot.com\",\n    messagingSenderId: \"350626442310\",\n    appId: \"1:350626442310:web:0f31eaae8f4b199177ee47\",\n    measurementId: \"G-6G36KPP8PE\"\n  };\n\n\n\n// inicializar firebase\nfirebase.initializeApp(firebaseConfig);\n\n// configuracion de react-redux\nconst rrfConfig = {\n    userProfile : 'users',\n    useFirestoreForProfile: true\n}\n\n// crear el enhacer con compose de redux y firestore\nconst createStoreWithFirebase = compose(\n    reactReduxFirebase(firebase, rrfConfig),\n    reduxFirestore(firebase)\n)(createStore);\n\n// Reducers \nconst rootReducer = combineReducers({\n    firebase : firebaseReducer,\n    firestore: firestoreReducer,\n    //Integramos al state el usuario\n    usuario : buscarUsuarioReducer\n})\n\n// state inicial\nconst initialState = {};\n\n// Create el store\nconst store = createStoreWithFirebase(rootReducer, initialState, compose(\n    reactReduxFirebase(firebase),\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n));\nexport default store;\n","export const BUSCAR_USUARIO = 'BUSCAR_USUARIO'; ","import React from 'react';\nimport '../../spinner.css';\n\nconst Spinner = () => {\n    return(\n        <div className=\"spinner\">\n            <div className=\"bounce1\"></div>\n            <div className=\"bounce2\"></div>\n            <div className=\"bounce3\"></div>\n        </div>\n    );\n}\n\nexport default Spinner;\n","import React from 'react';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport Spinner from '../layout/Spinner';\n\n\nconst Libros = ({libros, firestore}) => {\n\n    const eliminarLibro = id => {\n        // eliminar libro de Firestore\n        firestore.delete({\n            collection : 'libros',\n            doc : id\n        });\n        \n    }\n\n    if(!libros) return <Spinner />\n\n\n    return ( \n        <div className=\"row\">\n            <div className=\"col-12 mb-4\">\n                <Link to=\"/libros/nuevo\" className=\"btn btn-success\">\n                    <i className=\"fa fa-plus\"></i> {''}\n                    Nuevo Libro\n                </Link>\n            </div>\n            <div className=\"col-md-8\">\n                <h2>\n                    <i className=\"fa fa-book\"></i> {''}\n                    Libros\n                </h2>\n            </div>\n\n            <table className=\"table table-striped mt-4\">\n                <thead className=\"text-light bg-primary\">\n                    <tr>\n                        <th>Titulo</th>\n                        <th>ISBN</th>\n                        <th>Editorial</th>\n                        <th>Existencia</th>\n                        <th>Disponibles</th>\n                        <th>Acciones</th>\n                    </tr>\n                </thead>\n\n                <tbody>\n                    {libros.map(libro => (\n                        <tr key={libro.id}>\n                            <td>{libro.titulo}</td>\n                            <td>{libro.ISBN}</td>\n                            <td>{libro.editorial}</td>\n                            <td>{libro.existencia}</td>\n                            <td>{libro.existencia - libro.prestados.length}</td>\n                            <td>\n                                <Link \n                                    to={`/libros/mostrar/${libro.id}`}\n                                    className=\"btn btn-success btn-block\"\n                                > \n                                    <i className=\"fa fa-angle-double-right\"></i> {''}  \n                                    Más Información\n                                </Link>\n\n                                <button \n                                    type=\"button\"\n                                    className=\"btn btn-danger btn-block\"\n                                    onClick={() => eliminarLibro(libro.id)}\n                                >\n                                    <i className=\"fa fa-trash-alt\"></i> {''}\n                                    Eliminar\n\n                                </button>\n                            </td>\n                        </tr>\n                    ))}\n                </tbody>\n            </table>\n        </div>\n     );\n}\n\nLibros.propTypes = {\n    firestore : PropTypes.object.isRequired,\n    libros: PropTypes.array\n}\n \nexport default compose(\n    firestoreConnect([{ collection : 'libros' }]),\n    connect((state, props) => ({\n        libros : state.firestore.ordered.libros\n    }))\n)(Libros);","import React, { Component } from 'react';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport Spinner from '../layout/Spinner';\n\nclass MostrarLibro extends Component {\n\n    devolverLibro = id => {\n        // extraer firestore\n        const { firestore } = this.props;\n\n        // copia del libro\n        const libroActualizado = {...this.props.libro};\n\n        // eliminar la persona que esta realizando la devolución de prestados\n        const prestados = libroActualizado.prestados.filter(elemento => elemento.codigo !== id);\n        libroActualizado.prestados = prestados;\n\n        // actualizar en firebase\n        firestore.update({\n            collection : 'libros',\n            doc: libroActualizado.id\n        }, libroActualizado);\n    }\n\n    render() {\n        // extraer el libro\n        const { libro } = this.props;\n\n        if(!libro) return <Spinner />;\n\n        // boton para solicitar un libro\n        let btnPrestamo;\n\n        if(libro.existencia - libro.prestados.length > 0 ) {\n            btnPrestamo = <Link to={`/libros/prestamo/${libro.id}`}\n                                className=\"btn btn-success my-3\"\n                            >Solicitar Prestamo</Link>\n        } else {\n            btnPrestamo = null;\n        }\n        \n        return ( \n            <div className=\"row\">\n                <div className=\"col-md-6 mb-4\">\n                    <Link to=\"/\" className=\"btn btn-secondary\">\n                        <i className=\"fa fa-arrow-circle-left\"></i> {''}\n                        Volver Al Listado\n                    </Link> \n                </div>\n                <div className=\"col-md-6 mb-4\">\n                    <Link to={`/libros/editar/${libro.id}`} className=\"btn btn-primary float-right\">\n                        <i className=\"fa fa-pencil-alt\"></i> {''}\n                        Editar Libro\n                    </Link> \n                </div>\n\n                <hr className=\"mx-5 w-100\"/>\n\n                <div className=\"col-12\">\n                    <h2 className=\"mb-4\">{libro.titulo}</h2>\n\n                    <p>\n                        <span className=\"font-weight-bold\">\n                            ISBN:\n                        </span> {''}\n                        {libro.ISBN}\n                    </p>\n\n                    <p>\n                        <span className=\"font-weight-bold\">\n                            Editorial:\n                        </span> {''}\n                        {libro.editorial}\n                    </p>\n\n                    <p>\n                        <span className=\"font-weight-bold\">\n                            Existencia:\n                        </span> {''}\n                        {libro.existencia}\n                    </p>\n\n                    <p>\n                        <span className=\"font-weight-bold\">\n                            Disponibles:\n                        </span> {''}\n                        {libro.existencia - libro.prestados.length }\n                    </p>\n\n                    {/* Boton para solicitar un prestamo de libro */}\n                    {btnPrestamo}\n\n                    {/* Muestra las personas que tienen los libros */}\n\n                    <h3 className=\"my-2\">Personas que tienen el Libro Prestado</h3>\n\n                    {libro.prestados.map(prestado => (\n                        <div key={prestado.codigo} className=\"card my-2\">\n                            <h4 className=\"card-header\">\n                                {prestado.nombre} {prestado.apellido}\n                            </h4>\n\n                            <div className=\"card-body\">\n                                <p>\n                                    <span className=\"font-weight-bold\">\n                                        Código:\n                                    </span> {''}\n                                    {prestado.codigo}\n                                </p>\n\n                                <p>\n                                    <span className=\"font-weight-bold\">\n                                        Carrera:\n                                    </span> {''}\n                                    {prestado.carrera}\n                                </p>\n\n                                <p>\n                                    <span className=\"font-weight-bold\">\n                                        Fecha Solicitud:\n                                    </span> {''}\n                                    {prestado.fecha_solicitud}\n                                </p>\n                            </div>\n\n                            <div className=\"card-footer\">\n                                <button \n                                    type=\"button\"\n                                    className=\"btn btn-success font-weight-bold\"\n                                    onClick={() => this.devolverLibro(prestado.codigo)}\n                                > Realizar Devolución </button>\n                            </div>\n                        </div>\n                    ))}\n                </div>\n            </div>        \n         );\n    }\n}\n\nMostrarLibro.propTypes = {\n    firestore : PropTypes.object.isRequired\n}\n\nexport default compose(\n    firestoreConnect(props => [\n        {\n            collection : 'libros',\n            storeAs : 'libro',\n            doc : props.match.params.id\n        }\n    ]), \n    connect(({ firestore: { ordered }}, props ) => ({\n        libro : ordered.libro && ordered.libro[0]\n    }))\n)(MostrarLibro)","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport PropTypes from 'prop-types';\n\nclass NuevoLibro extends Component {\n    state = { \n        titulo: '',\n        ISBN: '',\n        editorial: '',\n        existencia : ''\n     }\n\n     // guardar el libro en la base de datos\n     agregarLibro = e => {\n         e.preventDefault();\n\n         // tomar una copia del state\n        const nuevoLibro = this.state;\n\n        // agregar un arreglo de interesados.\n        nuevoLibro.prestados = [];\n\n         // extraer firestore con sus métodos\n         const { firestore, history } = this.props;\n          \n         // añadirlo a la base de datos y redireccionar\n         firestore.add({collection: 'libros'}, nuevoLibro)\n            .then(() => history.push('/'))\n     }\n\n     // almacena lo que el usuario escribe en el state\n     leerDato = e => {\n         this.setState({\n             [e.target.name] : e.target.value\n         })\n     }\n\n\n    render() { \n        return ( \n            <div className=\"row\">\n                <div className=\"col-12 mb-4\">\n                    <Link to=\"/\" className=\"btn btn-secondary\">\n                        <i className=\"fa fa-arrow-circle-left\"></i> {''}\n                        Volver al Listado\n                    </Link>\n                </div>\n                <div className=\"col-12\">\n                    <h2>\n                        <i className=\"fa fa-book\"></i> {''}\n                        Nuevo Libro\n                    </h2>\n\n                    <div className=\"row justify-content-center\">\n                        <div className=\"col-md-8 mt-5\">\n                            <form\n                                onSubmit={this.agregarLibro}\n                            >\n                                <div className=\"form-group\">\n                                    <label>Titulo:</label>\n                                    <input \n                                        type=\"text\"\n                                        className=\"form-control\"\n                                        name=\"titulo\"\n                                        placeholder=\"Titulo o Nombre de Libro\"\n                                        required\n                                        value={this.state.titulo}\n                                        onChange={this.leerDato}\n                                    />\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <label>Editorial:</label>\n                                    <input \n                                        type=\"text\"\n                                        className=\"form-control\"\n                                        name=\"editorial\"\n                                        placeholder=\"Editorial de Libro\"\n                                        required\n                                        value={this.state.editorial}\n                                        onChange={this.leerDato}\n                                    />\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <label>ISBN:</label>\n                                    <input \n                                        type=\"text\"\n                                        className=\"form-control\"\n                                        name=\"ISBN\"\n                                        placeholder=\"ISBN de Libro\"\n                                        required\n                                        value={this.state.ISBN}\n                                        onChange={this.leerDato}\n                                    />\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <label>Existencia:</label>\n                                    <input \n                                        type=\"number\"\n                                        min=\"0\"\n                                        className=\"form-control\"\n                                        name=\"existencia\"\n                                        placeholder=\"Cantidad en Existencia\"\n                                        required\n                                        value={this.state.existencia}\n                                        onChange={this.leerDato}\n                                    />\n                                </div>\n\n                                <input type=\"submit\" value=\"Agregar Libro\" className=\"btn btn-success\"/>\n\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div> \n    \n            \n         );\n    }\n}\n\nNuevoLibro.propTypes = {\n    firestore: PropTypes.object.isRequired\n}\n\nexport default firestoreConnect()( NuevoLibro );\n","import React, { Component } from 'react';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport Spinner from '../layout/Spinner';\n\nclass EditarLibro extends Component {\n    \n    // refs\n    tituloInput = React.createRef();\n    editorialInput = React.createRef();\n    ISBNInput = React.createRef();\n    existenciaInput = React.createRef();\n\n    // Actualiza el Libro en firestore\n    actualizarLibro = (e) => {\n        e.preventDefault();\n\n        // construir el nuevo objeto\n        const libroActualizado = {\n            titulo : this.tituloInput.current.value,\n            editorial : this.editorialInput.current.value,\n            ISBN : this.ISBNInput.current.value,\n            existencia : this.existenciaInput.current.value,\n        }\n        \n        // leer firestore y history\n        const { firestore, history, libro } = this.props\n\n        // actualizar en firestore\n        firestore.update({\n            collection: 'libros',\n            doc: libro.id\n        }, libroActualizado).then(history.push('/'))\n    }\n\n    render() { \n\n        // obtener el libro\n        const { libro } = this.props;\n\n        if(!libro) return <Spinner />\n\n        return ( \n            <div className=\"row\">\n                <div className=\"col-12 mb-4\">\n                    <Link to={'/'} className=\"btn btn-secondary\">\n                        <i className=\"fa fa-arrow-circle-left\"></i> {''}\n                        Volver al Listado\n                    </Link>\n                </div>\n                <div className=\"col-12\">\n                    <h2>\n                        <i className=\"fa fa-book\"></i> {''}\n                        Editar Libro\n                    </h2>\n\n                    <div className=\"row justify-content-center\">\n                        <div className=\"col-md-8 mt-5\">\n                            <form\n                                onSubmit={this.actualizarLibro}\n                            >\n                                <div className=\"form-group\">\n                                    <label>Titulo:</label>\n                                    <input \n                                        type=\"text\"\n                                        className=\"form-control\"\n                                        name=\"titulo\"\n                                        placeholder=\"Titulo o Nombre de Libro\"\n                                        required\n                                        defaultValue={libro.titulo}\n                                        ref={this.tituloInput}\n                                    />\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <label>Editorial:</label>\n                                    <input \n                                        type=\"text\"\n                                        className=\"form-control\"\n                                        name=\"editorial\"\n                                        placeholder=\"Editorial de Libro\"\n                                        required\n                                        defaultValue={libro.editorial}\n                                        ref={this.editorialInput}\n                                    />\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <label>ISBN:</label>\n                                    <input \n                                        type=\"text\"\n                                        className=\"form-control\"\n                                        name=\"ISBN\"\n                                        placeholder=\"ISBN de Libro\"\n                                        required\n                                        defaultValue={libro.ISBN}\n                                        ref={this.ISBNInput}\n                                    />\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <label>Existencia:</label>\n                                    <input \n                                        type=\"number\"\n                                        min=\"0\"\n                                        className=\"form-control\"\n                                        name=\"existencia\"\n                                        placeholder=\"Cantidad en Existencia\"\n                                        required\n                                        defaultValue={libro.existencia}\n                                        ref={this.existenciaInput}\n                                    />\n                                </div>\n\n                                <input type=\"submit\" value=\"Editar Libro\" className=\"btn btn-success\"/>\n\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>     \n         );\n    }\n}\n \nEditarLibro.propTypes = {\n    firestore: PropTypes.object.isRequired\n}\n \nexport default compose(\n    firestoreConnect(props => [\n        {\n            collection : 'libros',\n            storeAs : 'libro',\n            doc : props.match.params.id\n        }\n    ]), \n    connect(({ firestore: { ordered }}, props ) => ({\n        libro : ordered.libro && ordered.libro[0]\n    }))\n)(EditarLibro)","import React from 'react';\n\nconst FichaSuscriptor = ({alumno}) => {\n    return ( \n        <div className=\"card my-3\">\n            <h3 className=\"card-header bg-primary text-white\">Datos Solicitante</h3>\n\n            <div className=\"card-body\">\n                <p className=\"font-weight-bold\">Nombre: {''}\n                    <span className=\"font-weight-normal\">{alumno.nombre}</span>\n                </p>\n                <p className=\"font-weight-bold\">Código: {''}\n                    <span className=\"font-weight-normal\">{alumno.codigo}</span>\n                </p>\n                <p className=\"font-weight-bold\">Carrera: {''}\n                    <span className=\"font-weight-normal\">{alumno.carrera}</span>\n                </p>\n            </div>\n        </div>\n     );\n}\n \nexport default FichaSuscriptor;","import React, { Component } from 'react';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport Spinner from '../layout/Spinner';\n\nimport FichaSuscriptor from '../suscriptores/FichaSuscriptor';\n\n// REDUX Actions\nimport { buscarUsuario } from '../../actions/buscarUsuarioActions';\n\nclass PrestamoLibro extends Component {\n    state = { \n        noResultados: false,\n        busqueda : ''\n    }\n\n    // Buscar alumno por Código\n    buscarAlumno = e => {\n        e.preventDefault();\n\n        // obtener el valor a buscar\n        const { busqueda } = this.state;\n\n        // extraer firestore\n        const { firestore, buscarUsuario } = this.props;\n\n        // hacer la consulta, en este caso buscamos la coleccion y esperamos\n        // la interaccion del usuario \n        const coleccion = firestore.collection('suscriptores');\n        //en la consulta con firebase lo que hacemos es un where == busqueda y guardamos en consulta\n        const consulta = coleccion.where(\"codigo\", \"==\", busqueda).get();\n\n        // leer los resultados\n        consulta.then(resultado => {\n            if(resultado.empty) {\n                // no hay resultados\n\n                // almacenar en redux un objeto vacio\n                buscarUsuario({})\n\n                // actualizar el state en base a si hay resultados\n                this.setState({\n                    noResultados: true\n                });\n            } else {\n                // si hay resultados\n\n                // colocar el resultado en el state de Redux\n                const datos = resultado.docs[0];\n                buscarUsuario(datos.data());\n\n                // actualizar el state en base a si hay resultados\n                this.setState({\n                    noResultados: false,\n                })\n            }\n        })\n    }\n\n    // almacena los datos del alumno para solicitar el libro\n    solicitarPrestamo = () => {\n        const { usuario } = this.props;\n\n        // fecha de alta\n        usuario.fecha_solicitud = new Date().toLocaleDateString();\n\n        // No se pueden mutar los pros, tomar una copia y crear un arreglo nuevo\n        let prestados = [];\n        prestados = [...this.props.libro.prestados, usuario];\n\n        // Copiar el objeto y agregar los prestados\n        const libro = {...this.props.libro};\n\n        // eliminar los prestados anteriores\n        delete libro.prestados;\n\n        // asignar los prestados\n        libro.prestados = prestados;\n\n        // extraer firestore\n        const {firestore, history} = this.props;\n\n        // almacenar en la BD\n        firestore.update({\n            collection: 'libros',\n            doc: libro.id\n        }, libro ).then(history.push('/'));\n    }\n\n\n    // Almacenar el codigo en el state\n    leerDato = e => {\n        this.setState({\n            [e.target.name] : e.target.value\n        })\n    }\n\n\n    render() { \n        // Extaer el libro\n        const { libro } = this.props;\n    \n        // mostrar el spinner\n        if(!libro) return <Spinner />\n \n        // extraer los datos del alumno\n        const {  usuario } = this.props;\n\n        let fichaAlumno, btnSolicitar;\n        if(usuario.nombre) {\n            fichaAlumno = <FichaSuscriptor \n                            alumno={usuario}\n                         />\n            btnSolicitar = <button\n                                type=\"button\"\n                                className=\"btn btn-primary btn-block\"\n                                onClick={this.solicitarPrestamo}\n                                >Solicitar Prestamo</button>\n        } else {\n            fichaAlumno = null;\n            btnSolicitar = null;\n        }\n\n        // Mostrar mensaje de error\n        const {noResultados} = this.state;\n\n        let mensajeResultado = '';\n        if(noResultados) {\n            mensajeResultado = <div className=\"alert alert-danger text-center font-weight-bold\">No hay resultados para ese código.</div>\n        } else {\n            mensajeResultado = null;\n        }\n\n        return ( \n            <div className=\"row\">\n                <div className=\"col-12 mb-4\">\n                    <Link to={'/'} className=\"btn btn-secondary\">\n                        <i className=\"fa fa-arrow-circle-left\"></i> {''}\n                        Volver al Listado\n                    </Link>\n                </div>\n                <div className=\"col-12\">\n                    <h2>\n                        <i className=\"fa fa-book\"></i> {''}\n                        Solicitar Prestamo : {libro.titulo}\n                    </h2>\n\n                    <div className=\"row justify-content-center mt-5\">\n                        <div className=\"col-md-8\">\n                            <form\n                                onSubmit={this.buscarAlumno}\n                                className=\"mb-4\"\n                            >\n                                <legend className=\"color-primary text-center\">\n                                    Busca el Suscriptor por Código\n                                </legend>\n\n                                <div className=\"form-group\">\n                                    <input\n                                        type=\"text\"\n                                        name=\"busqueda\"\n                                        className=\"form-control\"\n                                        onChange={this.leerDato}\n                                    />\n                                </div>\n                                <input value=\"Buscar Alumno\" type=\"submit\" className=\"btn btn-success btn-block\"/>\n                            </form>\n\n                            {/* Muestra la ficha del alumno y el botón para solicitar el prestamo */}\n                            {fichaAlumno}\n                            {btnSolicitar}\n\n                            {/* Muestra un mensaje de no resultados */}\n                            \n                            {mensajeResultado}\n\n                        </div>\n                    </div>\n                </div>\n            </div>\n         );\n    }\n}\n \nPrestamoLibro.propTypes = {\n    firestore: PropTypes.object.isRequired\n}\n \nexport default compose(\n    firestoreConnect(props => [\n        {\n            collection : 'libros',\n            storeAs : 'libro',\n            doc : props.match.params.id\n        }\n    ]), \n    connect(({ firestore: { ordered }, usuario}, props ) => ({\n        libro : ordered.libro && ordered.libro[0],\n        usuario: usuario\n    }), {  buscarUsuario })\n)(PrestamoLibro)","import { BUSCAR_USUARIO } from './types';\n\nexport const buscarUsuario = usuario => {\n    return {\n        type: BUSCAR_USUARIO,\n        usuario\n    }\n} ","import React from 'react';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport Spinner from '../layout/Spinner';\n\nconst Suscriptores = ({suscriptores, firestore, history}) => {\n\n    if(!suscriptores) return <Spinner></Spinner>\n\n    // Eliminar suscriptores, usamos firestor\n    const eliminarSuscriptor = (id) => {\n       //eliminar\n       //utilizamos la funcion delete que nos provee firestore\n       //Le enviamos un objeto con atributos que indican\n       //coleccion\n        firestore.delete({\n            collection : 'suscriptores',\n            doc : id\n        })\n        .then(history.push('/suscriptores'));//Accion posterior a la consulta, redirige a suscriptores\n    }\n\n    return (\n        <div className=\"row\">\n        <div className=\"col-md-12 mb-4\">\n            <Link\n                to=\"/suscriptores/nuevo\"\n                className=\"btn btn-primary\"\n            >\n                <i className=\"fa fa-plus\"></i> {''}\n                Nuevo Suscriptor\n            </Link>\n        </div>\n        <div className=\"col-md-8\">\n            <h2>\n                <i className=\"fa fa-users\"></i> Suscriptores\n            </h2>\n        </div>\n\n        <table className=\"table table-striped mt-4\">\n            <thead className=\"text-light bg-primary\">\n                <tr>\n                    <th>Nombre</th>\n                    <th>Carrera</th>\n                    <th>Acciones</th>\n                </tr>\n            </thead>\n\n            <tbody>\n               {/*Iteramos en el arreglo de suscriptores con map\n                1 - tomamos id\n                */}\n                {suscriptores.map(suscriptor => (\n                    <tr key={suscriptor.id}>\n                        <td>{suscriptor.nombre} {suscriptor.apellido}</td>\n                        <td>{suscriptor.carrera}</td>\n                        <td>\n                            <Link\n                                to={`/suscriptores/mostrar/${suscriptor.id}`}\n                                className=\"btn btn-success btn-block\"\n                            >\n                                <i className=\"fa fa-angle-double-right\"></i> {''}\n                                Más Información\n                            \n                            </Link>\n\n                            <button\n                                    type=\"button\"\n                                    className=\"btn btn-danger btn-block\"\n                                    onClick={ () => eliminarSuscriptor(suscriptor.id) }/*Aca accionamos el metodo eliminar*/ \n                                >\n                                    <i className=\"fas fa-trash-alt\"></i> {''}\n                                    Eliminar\n\n                            </button>\n                  \n                        </td>\n                    </tr>\n                ))}\n            </tbody>\n        </table>\n    </div>\n    );\n}\n\nSuscriptores.propTypes = {\n    firestore : PropTypes.object.isRequired,\n    suscriptores : PropTypes.array\n}\n\nexport default compose(\n    //Enviamos el path al cual consultaremos\n    // firestore connect crea un higher order component\n    // y se pasa automaticament como props\n    firestoreConnect([{ collection : 'suscriptores' }]),\n    // connect conecta el componente con el store de redux\n    connect((state, props) => ({\n        suscriptores : state.firestore.ordered.suscriptores\n    }))\n)(Suscriptores);","import React from 'react';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport Spinner from '../layout/Spinner';\n\nconst MostrarSuscriptor = ({suscriptor}) => {\n    if(!suscriptor) return <Spinner />\n\n    return ( \n        <div className=\"row\">\n            <div className=\"col-md-6 mb-4\">\n                <Link to=\"/suscriptores\" className=\"btn btn-secondary\">\n                    <i className=\"fa fa-arrow-circle-left\"></i> {''}\n                    Volver al Listado\n                </Link> \n            </div>\n            <div className=\"col-md-6\">\n                <Link to={`/suscriptores/editar/${suscriptor.id}`} className=\"btn btn-primary float-right\">\n                    <i className=\"fa fa-pencil\"></i> {''}\n                    Editar Suscriptor\n                </Link>\n            </div>\n\n            <hr className=\"mx-5 w-100\"/>\n\n            <div className=\"col-12\">\n                <h2 className=\"mb-4\">\n                    {suscriptor.nombre} {suscriptor.apellido}\n                </h2>\n\n                <p>\n                    <span className=\"font-weight-bold\">\n                        Carrera:\n                    </span> {''}\n                    {suscriptor.carrera}\n                </p>\n                <p>\n                    <span className=\"font-weight-bold\">\n                        Código:\n                    </span> {''}\n                    {suscriptor.codigo}\n                </p>\n            </div>\n            \n\n        </div>\n    );\n}\n\nMostrarSuscriptor.propTypes = {\n    firestore : PropTypes.object.isRequired\n}\n \nexport default compose(\n    firestoreConnect(props => [\n        {\n            //Coleccion que vamos a consultar\n            // es la consulta\n            collection : 'suscriptores',\n            //damos un alias de suscriptor en storeAs\n            storeAs : 'suscriptor',\n            doc : props.match.params.id\n        }\n    ]), \n    //Hacemos la conexion, y tulizamos destructuring para buscar el suscriptor\n    connect(({ firestore: { ordered }}, props ) => ({\n        suscriptor : ordered.suscriptor && ordered.suscriptor[0]\n    }))\n)(MostrarSuscriptor)","import React, { Component } from 'react';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport Spinner from '../layout/Spinner';\n\nclass EditarSuscriptor extends Component {\n\n    // crear los refs, en vez de almacenar los datos en el state\n    // para ir leyendo lo que el usuario va escribiendo\n\n    nombreInput = React.createRef();\n    apellidoInput = React.createRef();\n    codigoInput = React.createRef();\n    carreraInput = React.createRef();\n\n    // Edita el Suscriptor en la base de datos\n    editarSuscriptor = e => {\n        e.preventDefault();\n\n        // crear el objeto que va a actualizar\n        const suscriptorActualizado = {\n            nombre : this.nombreInput.current.value,\n            apellido : this.apellidoInput.current.value,\n            codigo : this.codigoInput.current.value,\n            carrera : this.carreraInput.current.value,\n        }\n        \n        // extraer firestore, y history de props\n        const { suscriptor, firestore, history } = this.props;\n        \n        // almacenar en la base de datos con firestore\n        firestore.update({\n            collection: 'suscriptores',\n            doc: suscriptor.id\n        }, suscriptorActualizado ).then(history.push('/suscriptores'));\n\n    }\n\n\n    render() { \n\n        //guardamos los datos de suscriptor que estan en props en una variable\n        const { suscriptor } = this.props;\n\n        if(!suscriptor) return <Spinner />\n\n        return ( \n            <div className=\"row\">\n                <div className=\"col-12 mb-4\">\n                    <Link to={'/suscriptores'} className=\"btn btn-secondary\">\n                        <i className=\"fa fa-arrow-circle-left\"></i> {''}\n                        Volver al Listado\n                    </Link>\n                </div>\n                <div className=\"col-12\">\n                    <h2>\n                        <i className=\"fa fa-user\"></i> {''}\n                        Editar Suscriptor\n                    </h2>\n\n                    <div className=\"row justify-content-center\">\n                        <div className=\"col-md-8 mt-5\">\n                            <form\n                                onSubmit={this.editarSuscriptor}\n                            >\n                                <div className=\"form-group\">\n                                    <label>Nombre:</label>\n                                        {/*En este caso usamos defaultValue para que pueda\n                                        cambiar el valor, controlComponent*/ }\n                                    <input \n                                        type=\"text\"\n                                        className=\"form-control\"\n                                        name=\"nombre\"\n                                        placeholder=\"Nombre del Suscriptor\"\n                                        required\n                                        ref={this.nombreInput}\n                                    \n                                        defaultValue={suscriptor.nombre}\n                                    />\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <label>Apellido:</label>\n                                    <input \n                                        type=\"text\"\n                                        className=\"form-control\"\n                                        name=\"apellido\"\n                                        placeholder=\"Apellido del Suscriptor\"\n                                        required\n                                        ref={this.apellidoInput}\n                                        defaultValue={suscriptor.apellido}\n                                    />\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <label>Carrera:</label>\n                                    <input \n                                        type=\"text\"\n                                        className=\"form-control\"\n                                        name=\"carrera\"\n                                        placeholder=\"Carrera del Suscriptor\"\n                                        required\n                                        ref={this.carreraInput}\n                                        defaultValue={suscriptor.carrera}\n                                    />\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <label>Código:</label>\n                                    <input \n                                        type=\"text\"\n                                        className=\"form-control\"\n                                        name=\"codigo\"\n                                        placeholder=\"Código del Suscriptor\"\n                                        required\n                                        ref={this.codigoInput}\n                                        defaultValue={suscriptor.codigo}\n                                    />\n                                </div>\n\n                                <input \n                                    type=\"submit\"\n                                    value=\"Editar Suscriptor\"\n                                    className=\"btn btn-success\"\n                                />\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nEditarSuscriptor.propTypes = {\n    firestore: PropTypes.object.isRequired\n}\n \nexport default compose(\n    firestoreConnect(props => [\n        {\n            collection : 'suscriptores',\n            storeAs : 'suscriptor',\n            doc : props.match.params.id\n        }\n    ]), \n    connect(({ firestore: { ordered }}, props ) => ({\n        suscriptor : ordered.suscriptor && ordered.suscriptor[0]\n    }))\n)(EditarSuscriptor)","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport PropTypes from 'prop-types';\n\nclass NuevoSuscriptor extends Component {\n\n    /* Usamos state en el componente para ir agregando los ocmpoenntes\n        de esta forma vamos leyendo los datos a medida que ingresamos\n        con on change\n    */\n\n    state = { \n        nombre: '',\n        apellido: '',\n        carrera : '',\n        codigo : ''\n    }\n\n    // Agrega un nuevo suscriptor a la base de datos\n    // la variable e tiene info sobre el input que estamos usando y la info que colocamos\n    \n    agregarSuscriptor = e => {\n        e.preventDefault();\n\n        // extraer los valores del state\n        const nuevoSuscriptor = this.state;\n\n        // extraer firestore  de props\n        const { firestore, history } = this.props\n\n        //Guardarlo en la base de datos\n        // usamos el metodo add y pasamos la coleccion y el objeto de nuevoSsuscriptor\n        firestore.add({ collection : 'suscriptores' }, nuevoSuscriptor)\n            .then(() => history.push('/suscriptores') )//Promise si funciona bien va para suscriptores\n    }\n\n    // extrae los valores del input y los coloca en el state\n    leerDato = e => {\n        //seteamos el state\n        this.setState({\n            //usamos array destructuring y buscamos el value del input y el name\n            [e.target.name] : e.target.value\n        })\n    }\n\n    render() { \n        return ( \n            <div className=\"row\">\n                <div className=\"col-12 mb-4\">\n                    <Link to={'/suscriptores'} className=\"btn btn-secondary\">\n                        <i className=\"fa fa-arrow-circle-left\"></i> {''}\n                        Volver al Listado\n                    </Link>\n                </div>\n                <div className=\"col-12\">\n                    <h2>\n                        <i className=\"fa fa-user-plus\"></i> {''} {/* lo de al lado sirve para dar espacio*/} \n                        Nuevo Suscriptor\n                    </h2>\n\n                    <div className=\"row justify-content-center\">\n                        <div className=\"col-md-8 mt-5\">\n                            <form\n                                onSubmit={this.agregarSuscriptor}\n                            >\n                                <div className=\"form-group\">\n                                    <label>Nombre:</label>\n                                    <input \n                                        type=\"text\"\n                                        className=\"form-control\"\n                                        name=\"nombre\"\n                                        placeholder=\"Nombre del Suscriptor\"\n                                        required\n                                        onChange={this.leerDato}\n                                        value={this.state.nombre}\n                                    />\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <label>Apellido:</label>\n                                    <input \n                                        type=\"text\"\n                                        className=\"form-control\"\n                                        name=\"apellido\"\n                                        placeholder=\"Apellido del Suscriptor\"\n                                        required\n                                        onChange={this.leerDato}\n                                        value={this.state.apellido}\n                                    />\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <label>Carrera:</label>\n                                    <input \n                                        type=\"text\"\n                                        className=\"form-control\"\n                                        name=\"carrera\"\n                                        placeholder=\"Carrera del Suscriptor\"\n                                        required\n                                        onChange={this.leerDato}\n                                        value={this.state.carrera}\n                                    />\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <label>Código:</label>\n                                    <input \n                                        type=\"text\"\n                                        className=\"form-control\"\n                                        name=\"codigo\"\n                                        placeholder=\"Código del Suscriptor\"\n                                        required\n                                        onChange={this.leerDato}\n                                        value={this.state.codigo}\n                                    />\n                                </div>\n\n                                <input \n                                    type=\"submit\"\n                                    value=\"Agregar Suscriptor\"\n                                    className=\"btn btn-success\"\n                                />\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n         );\n    }\n}\n\nNuevoSuscriptor.propTypes = {\n    firestore : PropTypes.object.isRequired\n}\n \nexport default firestoreConnect()( NuevoSuscriptor );","import React, { Component } from 'react';\nimport { firebaseConnect } from 'react-redux-firebase';\nimport PropTypes from 'prop-types';\n\n\nclass Login extends Component {\n    state = { \n        email: '',\n        password: ''\n    }\n\n    // iniciar sesión en firebase\n    iniciarSesion = e => {\n        e.preventDefault();\n\n        // extraer firebase\n        const { firebase } = this.props\n\n        // extraer el state\n        const { email, password } = this.state;\n\n        // autenticar el usuario\n        firebase.login({\n            email, \n            password\n        })\n        .then(resultado => console.log('Iniciaste sesión'))\n        .catch(error => console.log('Hubo un error'))\n    }\n\n    // Almacena lo que el usuario escribe en el state\n    leerDatos = e => {\n        this.setState({\n            [e.target.name] : e.target.value\n        })\n    }\n\n\n    render() { \n        return ( \n            <div className=\"row justify-content-center\">\n                <div className=\"col-md-5\">\n                    <div className=\"card mt-5\">\n                        <div className=\"card-body\">\n                            <h2 className=\"text-center py-4\">\n                                <i className=\"fa fa-lock\"></i> {''}\n                                Iniciar Sesión\n                            </h2>\n\n                            <form\n                                onSubmit={this.iniciarSesion}\n                            >\n                                <div className=\"form-group\">\n                                    <label>Email:</label>\n                                    <input \n                                        type=\"email\"\n                                        className=\"form-control\"\n                                        name=\"email\"\n                                        required\n                                        value={this.state.email}\n                                        onChange={this.leerDatos}\n                                    />\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <label>Password:</label>\n                                    <input \n                                        type=\"password\"\n                                        className=\"form-control\"\n                                        name=\"password\"\n                                        required\n                                        value={this.state.password}\n                                        onChange={this.leerDatos}\n                                    />\n                                </div>\n\n                                <input \n                                    type=\"submit\"\n                                    className=\"btn btn-success btn-block\"\n                                    value=\"Inicar Sesión\"\n                                />\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\nLogin.propTypes = {\n    firebase : PropTypes.object.isRequired\n}\n \nexport default firebaseConnect()(Login);","import React, {Component} from 'react';\nimport { Link } from 'react-router-dom';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport { firebaseConnect } from 'react-redux-firebase';\nimport PropTypes from 'prop-types';\n\nclass Navbar extends Component {\n    state = { \n        usuarioAutenticado : false\n    }\n\n    // recibe los props automaticamente\n    // Es una propiedad que recibe los props automaticamente\n    // y asi vemos si està loggeado o no el suaurio\n    static getDerivedStateFromProps(props, state) {\n        const { auth } = props;\n\n        //Si aut.uid es true entonces hay usuario autenticado\n        if(auth.uid) {\n            return { usuarioAutenticado : true }\n        } else {\n            return { usuarioAutenticado : false }\n        }\n    }\n\n    // cerrar la sesión\n    cerrarSesion = () => {\n        const { firebase } = this.props;\n        firebase.logout();\n    }\n\n    render() { \n\n      // Extramos con destructuring del state\n        const { usuarioAutenticado} = this.state;\n        // extraer datos de autenticacion\n        const { auth } = this.props;\n\n        return ( \n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary mb-5\">\n                <nav className=\"navbar navbar-light\">\n                    <span className=\"navbar-brand mb-0 h1\">\n                        Administrador de Biblioteca\n                    </span>\n                </nav>\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarColor01\" aria-controls=\"navbarColor01\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    <span className=\"navbar-toggler-icon\"></span>\n                </button>\n    \n                <div className=\"collapse navbar-collapse\" id=\"navbarColor01\">\n{/*Si està autenticado*/}\n                    {  usuarioAutenticado ? (\n                        <ul className=\"navbar-nav mr-auto\">\n                            <li className=\"nav-item\">\n                                <Link to={'/suscriptores'} className=\"nav-link\">\n                                    Suscriptores\n                                </Link>\n                            </li>\n                            <li className=\"nav-item\">\n                                <Link to={'/'} className=\"nav-link\">\n                                    Libros\n                                </Link>\n                            </li>\n                        </ul>\n                     ) : null }\n\n{/*Si està autenticado*/}\n                     {usuarioAutenticado ? (\n                            <ul className=\"navbar-nav ml-auto\">\n                                <li className=\"nav-item\">\n                                    <a href=\"#!\" className=\"nav-link\">\n                                        { auth.email }\n                                    </a>\n                                </li>\n\n                                <li className=\"nav-item\">\n                                    <button\n                                        type=\"button\"\n                                        className=\"btn btn-danger\"\n                                        onClick={this.cerrarSesion}\n                                    >\n                                        Cerrar Sesión\n                                    </button>\n                                </li>\n                            </ul>\n                     ) : null}\n                </div>\n            </nav>\n        );\n    }\n}\n\nNavbar.propTypes = {\n    firebase : PropTypes.object.isRequired,\n    auth: PropTypes.object.isRequired\n}\n\nexport default compose(\n    firebaseConnect(),\n    connect((state, props) => ({\n      //Pasamos al state lo que està en auth\n        auth: state.firebase.auth\n    }))\n)(Navbar);","import locationHelperBuilder from 'redux-auth-wrapper/history4/locationHelper';\nimport { connectedRouterRedirect } from 'redux-auth-wrapper/history4/redirect'\nimport { createBrowserHistory } from 'history'\nimport Spinner from '../componentes/layout/Spinner';\n\nconst locationHelper = locationHelperBuilder({});\nconst history = createBrowserHistory();\n//History lo que hace es llevarnos a la ultima paina en la que estuvimos\n\nexport const UserIsAuthenticated = connectedRouterRedirect({\n  wrapperDisplayName: 'UserIsAuthenticated',\n  AuthenticatingComponent: Spinner,\n  allowRedirectBack: true,\n  redirectPath: (state, ownProps) =>\n    locationHelper.getRedirectQueryParam(ownProps) || '/login',\n  authenticatingSelector: ({ firebase: { auth, profile, isInitializing } }) =>\n    !auth.isLoaded || isInitializing === true,\n  authenticatedSelector: ({ firebase: { auth } }) =>\n    auth.isLoaded && !auth.isEmpty,\n});\n\nexport const UserIsNotAuthenticated = connectedRouterRedirect({\n  wrapperDisplayName: 'UserIsNotAuthenticated',\n  AuthenticatingComponent: Spinner,\n  allowRedirectBack: false,\n  redirectPath: (state, ownProps) =>\n    locationHelper.getRedirectQueryParam(ownProps) || '/',\n  authenticatingSelector: ({ firebase: { auth, isInitializing } }) =>\n    !auth.isLoaded || isInitializing === true,\n  authenticatedSelector: ({ firebase: { auth } }) =>\n    auth.isLoaded && auth.isEmpty,\n});     ","import React from 'react';\n//importamos el router\nimport { BrowserRouter as Router, Route, Switch} from 'react-router-dom'\nimport store from './store';\nimport { Provider } from 'react-redux';\n\n//Libros\nimport Libros from './componentes/libros/Libros';\nimport MostrarLibro from './componentes/libros/MostrarLibro';\nimport NuevoLibro from './componentes/libros/NuevoLibro';\nimport EditarLibro from './componentes/libros/EditarLibro';\nimport PrestamoLibro from './componentes/libros/PrestamoLibro';\n\n//Suscriptores\nimport Suscriptores from './componentes/suscriptores/Suscriptores';\nimport MostrarSuscriptor from './componentes/suscriptores/MostrarSuscriptor';\nimport EditarSuscriptor from './componentes/suscriptores/EditarSuscriptor';\nimport NuevoSuscriptor from './componentes/suscriptores/NuevoSuscriptor';\n\nimport Login from './componentes/auth/Login';\nimport Navbar from './componentes/layout/Navbar';\n\n// Routing Seguro\nimport { UserIsAuthenticated, UserIsNotAuthenticated } from './helpers/auth';\n\n\nfunction App() {\n  return (\n    <Provider store={store}>\n        <Router>\n          <Navbar></Navbar>\n          <div className=\"container\">\n          <Switch>\n                <Route exact path=\"/\" component={UserIsAuthenticated(Libros)} />\n                <Route exact path=\"/libros/mostrar/:id\" component={UserIsAuthenticated(MostrarLibro)} />\n                <Route exact path=\"/libros/nuevo\" component={UserIsAuthenticated(NuevoLibro)} />\n                <Route exact path=\"/libros/editar/:id\" component={UserIsAuthenticated(EditarLibro)} />\n                <Route exact path=\"/libros/prestamo/:id\" component={UserIsAuthenticated(PrestamoLibro)} />\n\n\n                <Route exact path=\"/suscriptores\" component={UserIsAuthenticated(Suscriptores)} />\n                <Route exact path=\"/suscriptores/nuevo\" component={UserIsAuthenticated(NuevoSuscriptor)} />\n                <Route exact path=\"/suscriptores/mostrar/:id\" component={UserIsAuthenticated(MostrarSuscriptor)} />\n                <Route exact path=\"/suscriptores/editar/:id\" component={UserIsAuthenticated(EditarSuscriptor)} />\n\n\n                <Route exact path=\"/login\" component={UserIsNotAuthenticated(Login)} />\n            </Switch>\n          </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}